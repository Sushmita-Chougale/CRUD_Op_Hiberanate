/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2024-05-20 06:10:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.supplier.dao.ProductDAO;
import com.supplier.dao.ProductDAO;
import com.supplier.hibernate.ProductDTO;

public final class saveSupplier_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.supplier.hibernate.ProductDTO");
    _jspx_imports_classes.add("com.supplier.dao.ProductDAO");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script  type=\"text/javascript\" src=\"/SupplierDetails/js/view.js\"></script>\r\n");
      out.write("<script> \r\n");
      out.write("    function redirectToUpdate(){\r\n");
      out.write("    \twindow.open(\"/SupplierDetails/jsp/editSupplier.jsp\")\r\n");
      out.write("    }</script>\r\n");
      out.write("    <script> \r\n");
      out.write("    function redirectTosaveProduct(){\r\n");
      out.write("    \twindow.open(\"/SupplierDetails/jsp/demo.jsp\")\r\n");
      out.write("    }</script>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- Custom CSS -->\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <body>\r\n");
      out.write("<div class=\"col-10 mt-5\">\r\n");
      out.write("\r\n");
 ProductDAO dao = new ProductDAO();
   List<ProductDTO> productList= dao.getAllProductDetails();
   
      out.write("\r\n");
      out.write("    <table class=\"table table-striped\">\r\n");
      out.write("    <thread>\r\n");
      out.write("    <tr>\r\n");
      out.write("    <th>Id</th>\r\n");
      out.write("    <th>Supplier Name</th>\r\n");
      out.write("    <th>Product Name</th>\r\n");
      out.write("    <th>Price</th>\r\n");
      out.write("    <th>Quantity</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thread>\r\n");
      out.write("   <tbody>\r\n");
      out.write("   ");
for(ProductDTO prod : productList){ 
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("        \t<td><label id=\"productId\">");
      out.print(prod.getId());
      out.write("</label></td>\r\n");
      out.write("\t\t\t<td><label id=\"supId\">");
      out.print(prod.getSupplierName());
      out.write("</label></td>\r\n");
      out.write("\t\t\t<td><label id=\"prodId\">");
      out.print(prod.getProductName());
      out.write("</label></td>\r\n");
      out.write("\t\t\t<td><label id=\"priceId\">");
      out.print(prod.getPrice());
      out.write("</label></td>\r\n");
      out.write("\t\t\t<td><label id=\"qtyId\">");
      out.print(prod.getQuantity());
      out.write("</label></td>\r\n");
      out.write("\r\n");
      out.write("          \r\n");
      out.write("        </tr>\r\n");
      out.write("        \r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    <div class =\"container text-center\">\r\n");
      out.write("        <button class=\"btn btn-primary btn-sm edit\" onclick=\"redirectToUpdate();\">Edit</button>              \r\n");
      out.write("                <button class=\"btn btn-success btn-sm delete\" onclick=\"redirectTosaveProduct();\">Back</button>\r\n");
      out.write("         </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Bootstrap JS and jQuery -->\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write(" </body>   \r\n");
      out.write("</head>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
